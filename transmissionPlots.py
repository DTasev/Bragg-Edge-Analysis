import matplotlib
matplotlib.use("Qt4Agg")
from matplotlib import pyplot as plt
import numpy as np
from astropy.io import fits
import Tkinter as tk
from tkFileDialog import askdirectory
import glob
import os


"""
for opening sample folder
"""
def openSample():
    return askdirectory()

"""
for generating a list of file names in sample folder
parameters: path generated by openSample()
returns: list of fits files ending with '[0-9].fits'
"""
def listSampleFiles(pathToSamples):
    return glob.glob(os.path.join(pathToSamples, '*[0-9].fits'))

"""
for opening open beam folder
"""
def openOpenBeam():
    pathToOpenBeam = askdirectory()
    return pathToOpenBeam

"""
for generating a list of file names in open beam folder
parameters: path generated by openOpenBeam()
returns: list of fits files ending with '[0-9].fits'
"""
def listOpenBeamFiles(pathToOpenBeam):
    return glob.glob(os.path.join(pathToOpenBeam, '*[0-9].fits'))

"""
calls the above functions and extracts count and TOF header data from each file, computes transmission ratio and zips the list of transmission intensities with TOF.
parameters: None
returns: list of tuples (transmission, TOF)
"""
def compute():
    pathToSample = openSample()
    pathToOpenBeam = openOpenBeam()

    sampleFiles = listSampleFiles(pathToSample)
    openBeamFiles = listOpenBeamFiles(pathToOpenBeam)

    zipped = zip(sampleFiles,openBeamFiles)

    transmissionData = []

    for x,y in zipped:
        hdux = fits.getheader(x)
        N_COUNTSsample = hdux['N_COUNTS']
        TOF = hdux['TOF']
        hduy = fits.getheader(y)
        N_COUNTSopen = hduy['N_COUNTS']
        transmitted = float(N_COUNTSsample)/float(N_COUNTSopen)
        transmissionData.insert(-1,(transmitted,TOF))

    return transmissionData

"""
unzips data for plotting, then plots the data
"""
def plot():
    data = compute()
    y_list = [x[0] for x in data]
    x_list = [x[1] for x in data]
    
    plt.plot(x_list, y_list,'x')
    plt.xlabel('Time of Flight (micro seconds)')
    plt.ylabel('Transmission')
    plt.title('Neutron Transmission')
    plt.show()
    plt.close()


plot()
